<?xml version='1.0' encoding='UTF-8'?><wsdl:definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://psn.ttp.ganimed.icmvc.emau.org/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" name="DomainManagerBeanService" targetNamespace="http://psn.ttp.ganimed.icmvc.emau.org/">
  <wsdl:types>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://psn.ttp.ganimed.icmvc.emau.org/" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://psn.ttp.ganimed.icmvc.emau.org/" version="1.0">
      <xs:element name="addDomain" type="tns:addDomain"/>
      <xs:element name="addDomainResponse" type="tns:addDomainResponse"/>
      <xs:element name="arePSNDeletable" type="tns:arePSNDeletable"/>
      <xs:element name="arePSNDeletableResponse" type="tns:arePSNDeletableResponse"/>
      <xs:element name="countPSNs" type="tns:countPSNs"/>
      <xs:element name="countPSNsForDomains" type="tns:countPSNsForDomains"/>
      <xs:element name="countPSNsForDomainsResponse" type="tns:countPSNsForDomainsResponse"/>
      <xs:element name="countPSNsResponse" type="tns:countPSNsResponse"/>
      <xs:element name="deleteDomain" type="tns:deleteDomain"/>
      <xs:element name="deleteDomainResponse" type="tns:deleteDomainResponse"/>
      <xs:element name="deleteDomainWithPSNs" type="tns:deleteDomainWithPSNs"/>
      <xs:element name="deleteDomainWithPSNsResponse" type="tns:deleteDomainWithPSNsResponse"/>
      <xs:element name="domainInDTO" type="tns:domainInDTO"/>
      <xs:element name="domainOutDTO" type="tns:domainOutDTO"/>
      <xs:element name="getDomain" type="tns:getDomain"/>
      <xs:element name="getDomainResponse" type="tns:getDomainResponse"/>
      <xs:element name="getDomainsForPrefix" type="tns:getDomainsForPrefix"/>
      <xs:element name="getDomainsForPrefixResponse" type="tns:getDomainsForPrefixResponse"/>
      <xs:element name="getDomainsForSuffix" type="tns:getDomainsForSuffix"/>
      <xs:element name="getDomainsForSuffixResponse" type="tns:getDomainsForSuffixResponse"/>
      <xs:element name="getRestrictionForCheckDigitClass" type="tns:getRestrictionForCheckDigitClass"/>
      <xs:element name="getRestrictionForCheckDigitClassResponse" type="tns:getRestrictionForCheckDigitClassResponse"/>
      <xs:element name="listDomains" type="tns:listDomains"/>
      <xs:element name="listDomainsResponse" type="tns:listDomainsResponse"/>
      <xs:element name="listPSNs" type="tns:listPSNs"/>
      <xs:element name="listPSNsForDomainsPaginated" type="tns:listPSNsForDomainsPaginated"/>
      <xs:element name="listPSNsForDomainsPaginatedResponse" type="tns:listPSNsForDomainsPaginatedResponse"/>
      <xs:element name="listPSNsPaginated" type="tns:listPSNsPaginated"/>
      <xs:element name="listPSNsPaginatedResponse" type="tns:listPSNsPaginatedResponse"/>
      <xs:element name="listPSNsResponse" type="tns:listPSNsResponse"/>
      <xs:element name="psndto" type="tns:psndto"/>
      <xs:element name="updateDomain" type="tns:updateDomain"/>
      <xs:element name="updateDomainInUse" type="tns:updateDomainInUse"/>
      <xs:element name="updateDomainInUseResponse" type="tns:updateDomainInUseResponse"/>
      <xs:element name="updateDomainResponse" type="tns:updateDomainResponse"/>
      <xs:complexType name="deleteDomainWithPSNs">
        <xs:sequence>
          <xs:element name="domainName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteDomainWithPSNsResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getDomainsForPrefix">
        <xs:sequence>
          <xs:element name="prefix" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDomainsForPrefixResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" nillable="true">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="domainList" type="tns:domainOutDTO"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="domainOutDTO">
        <xs:complexContent>
          <xs:extension base="tns:domainInDTO">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="childDomainNames" nillable="true" type="xs:string"/>
              <xs:element name="numberOfPseudonyms" type="xs:long"/>
              <xs:element name="numberOfAnonyms" type="xs:long"/>
              <xs:element name="cacheUsed" type="xs:boolean"/>
              <xs:element name="percentPsnsUsed" type="xs:short"/>
              <xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
              <xs:element minOccurs="0" name="updateDate" type="xs:dateTime"/>
              <xs:element minOccurs="0" name="createDateString" type="xs:string"/>
              <xs:element minOccurs="0" name="updateDateString" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="domainInDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="label" type="xs:string"/>
          <xs:element minOccurs="0" name="checkDigitClass" type="xs:string"/>
          <xs:element minOccurs="0" name="alphabet" type="xs:string"/>
          <xs:element minOccurs="0" name="config" type="tns:domainConfig"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="parentDomainNames" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="domainConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="forceCache" type="tns:forceCache"/>
          <xs:element name="includePrefixInCheckDigitCalculation" type="xs:boolean"/>
          <xs:element name="includeSuffixInCheckDigitCalculation" type="xs:boolean"/>
          <xs:element name="maxDetectedErrors" type="xs:int"/>
          <xs:element name="psnLength" type="xs:int"/>
          <xs:element minOccurs="0" name="psnPrefix" type="xs:string"/>
          <xs:element minOccurs="0" name="psnSuffix" type="xs:string"/>
          <xs:element name="psnsDeletable" type="xs:boolean"/>
          <xs:element name="sendNotificationsWeb" type="xs:boolean"/>
          <xs:element name="useLastCharAsDelimiterAfterXChars" type="xs:int"/>
          <xs:element minOccurs="0" name="validateValuesViaParents" type="tns:validateViaParents"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listPSNsPaginated">
        <xs:sequence>
          <xs:element name="domainName" type="xs:string"/>
          <xs:element name="config" type="tns:paginationConfig"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="paginationConfig">
        <xs:sequence>
          <xs:element name="filter">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="entry">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element minOccurs="0" name="key" type="tns:psnField"/>
                      <xs:element minOccurs="0" name="value" type="xs:string"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="filterFieldsAreTreatedAsConjunction" type="xs:boolean"/>
          <xs:element name="filterIsCaseSensitive" type="xs:boolean"/>
          <xs:element name="firstEntry" type="xs:int"/>
          <xs:element name="pageSize" type="xs:int"/>
          <xs:element minOccurs="0" name="sortField" type="tns:psnField"/>
          <xs:element name="sortIsAscending" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listPSNsPaginatedResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" nillable="true">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="psnList" type="tns:psndto"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="psndto">
        <xs:sequence>
          <xs:element minOccurs="0" name="domainName" type="xs:string"/>
          <xs:element minOccurs="0" name="originalValue" type="xs:string"/>
          <xs:element minOccurs="0" name="pseudonym" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arePSNDeletable">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arePSNDeletableResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addDomain">
        <xs:sequence>
          <xs:element name="domainDTO" type="tns:domainInDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addDomainResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getRestrictionForCheckDigitClass">
        <xs:sequence>
          <xs:element name="checkDigitClass" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRestrictionForCheckDigitClassResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="alphabetRestriction" type="tns:generatorAlphabetRestriction"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDomainsForSuffix">
        <xs:sequence>
          <xs:element name="suffix" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDomainsForSuffixResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" nillable="true">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="domainList" type="tns:domainOutDTO"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listPSNs">
        <xs:sequence>
          <xs:element name="domainName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listPSNsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" nillable="true">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="psnList" type="tns:psndto"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDomain">
        <xs:sequence>
          <xs:element name="domainName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDomainResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="domain" type="tns:domainOutDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="countPSNsForDomains">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="domainNames" type="xs:string"/>
          <xs:element name="config" type="tns:paginationConfig"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="countPSNsForDomainsResponse">
        <xs:sequence>
          <xs:element name="psnCountForDomains" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listDomains">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="listDomainsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" nillable="true">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="domainList" type="tns:domainOutDTO"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteDomain">
        <xs:sequence>
          <xs:element name="domainName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteDomainResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="updateDomain">
        <xs:sequence>
          <xs:element name="domainDTO" type="tns:domainInDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateDomainResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="countPSNs">
        <xs:sequence>
          <xs:element name="domainName" type="xs:string"/>
          <xs:element name="config" type="tns:paginationConfig"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="countPSNsResponse">
        <xs:sequence>
          <xs:element name="psnCount" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listPSNsForDomainsPaginated">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="domainNames" type="xs:string"/>
          <xs:element name="config" type="tns:paginationConfig"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listPSNsForDomainsPaginatedResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" nillable="true">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="psnListForDomains" type="tns:psndto"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateDomainInUse">
        <xs:sequence>
          <xs:element name="domainName" type="xs:string"/>
          <xs:element name="label" type="xs:string"/>
          <xs:element name="comment" type="xs:string"/>
          <xs:element name="sendNotificationsWeb" type="xs:boolean"/>
          <xs:element name="psnsDeletable" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateDomainInUseResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:simpleType name="forceCache">
        <xs:restriction base="xs:string">
          <xs:enumeration value="DEFAULT"/>
          <xs:enumeration value="ON"/>
          <xs:enumeration value="OFF"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="validateViaParents">
        <xs:restriction base="xs:string">
          <xs:enumeration value="OFF"/>
          <xs:enumeration value="VALIDATE"/>
          <xs:enumeration value="ENSURE_EXISTS"/>
          <xs:enumeration value="CASCADE_DELETE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="psnField">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NONE"/>
          <xs:enumeration value="VALUE"/>
          <xs:enumeration value="PSEUDONYM"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="generatorAlphabetRestriction">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NONE"/>
          <xs:enumeration value="CONST_10"/>
          <xs:enumeration value="CONST_32"/>
          <xs:enumeration value="PRIME"/>
          <xs:enumeration value="PRIMEPOWER"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="UnknownDomainException" type="tns:UnknownDomainExceptionType"/>
      <xs:complexType name="UnknownDomainExceptionType">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
      <xs:complexType name="InvalidParameterException">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameterName" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DomainInUseException" type="tns:DomainInUseExceptionType"/>
      <xs:complexType name="DomainInUseExceptionType">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="InvalidGeneratorException" type="tns:InvalidGeneratorExceptionType"/>
      <xs:complexType name="InvalidGeneratorExceptionType">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="InvalidAlphabetException" type="tns:InvalidAlphabetExceptionType"/>
      <xs:complexType name="InvalidAlphabetExceptionType">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="InvalidParentDomainException" type="tns:InvalidParentDomainException"/>
      <xs:complexType name="InvalidParentDomainException">
        <xs:sequence>
          <xs:element minOccurs="0" name="parentDomainName" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="InvalidCheckDigitClassException" type="tns:InvalidCheckDigitClassExceptionType"/>
      <xs:complexType name="InvalidCheckDigitClassExceptionType">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="listPSNsResponse">
    <wsdl:part element="tns:listPSNsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="listDomainsResponse">
    <wsdl:part element="tns:listDomainsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDomainsForPrefix">
    <wsdl:part element="tns:getDomainsForPrefix" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidGeneratorException">
    <wsdl:part element="tns:InvalidGeneratorException" name="InvalidGeneratorException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="arePSNDeletable">
    <wsdl:part element="tns:arePSNDeletable" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addDomainResponse">
    <wsdl:part element="tns:addDomainResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRestrictionForCheckDigitClass">
    <wsdl:part element="tns:getRestrictionForCheckDigitClass" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDomainsForSuffix">
    <wsdl:part element="tns:getDomainsForSuffix" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part element="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="listDomains">
    <wsdl:part element="tns:listDomains" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteDomainWithPSNsResponse">
    <wsdl:part element="tns:deleteDomainWithPSNsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteDomain">
    <wsdl:part element="tns:deleteDomain" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPSNsForDomainsPaginated">
    <wsdl:part element="tns:listPSNsForDomainsPaginated" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDomainsForPrefixResponse">
    <wsdl:part element="tns:getDomainsForPrefixResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateDomainInUseResponse">
    <wsdl:part element="tns:updateDomainInUseResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="countPSNsResponse">
    <wsdl:part element="tns:countPSNsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteDomainWithPSNs">
    <wsdl:part element="tns:deleteDomainWithPSNs" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="arePSNDeletableResponse">
    <wsdl:part element="tns:arePSNDeletableResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="countPSNsForDomainsResponse">
    <wsdl:part element="tns:countPSNsForDomainsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DomainInUseException">
    <wsdl:part element="tns:DomainInUseException" name="DomainInUseException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPSNsPaginated">
    <wsdl:part element="tns:listPSNsPaginated" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addDomain">
    <wsdl:part element="tns:addDomain" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDomainsForSuffixResponse">
    <wsdl:part element="tns:getDomainsForSuffixResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPSNsForDomainsPaginatedResponse">
    <wsdl:part element="tns:listPSNsForDomainsPaginatedResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateDomainResponse">
    <wsdl:part element="tns:updateDomainResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UnknownDomainException">
    <wsdl:part element="tns:UnknownDomainException" name="UnknownDomainException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidAlphabetException">
    <wsdl:part element="tns:InvalidAlphabetException" name="InvalidAlphabetException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidCheckDigitClassException">
    <wsdl:part element="tns:InvalidCheckDigitClassException" name="InvalidCheckDigitClassException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPSNs">
    <wsdl:part element="tns:listPSNs" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDomainResponse">
    <wsdl:part element="tns:getDomainResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteDomainResponse">
    <wsdl:part element="tns:deleteDomainResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDomain">
    <wsdl:part element="tns:getDomain" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="countPSNsForDomains">
    <wsdl:part element="tns:countPSNsForDomains" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPSNsPaginatedResponse">
    <wsdl:part element="tns:listPSNsPaginatedResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRestrictionForCheckDigitClassResponse">
    <wsdl:part element="tns:getRestrictionForCheckDigitClassResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateDomain">
    <wsdl:part element="tns:updateDomain" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="countPSNs">
    <wsdl:part element="tns:countPSNs" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParentDomainException">
    <wsdl:part element="tns:InvalidParentDomainException" name="InvalidParentDomainException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateDomainInUse">
    <wsdl:part element="tns:updateDomainInUse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="DomainManager">
    <wsdl:operation name="deleteDomainWithPSNs">
      <wsdl:input message="tns:deleteDomainWithPSNs" name="deleteDomainWithPSNs">
      </wsdl:input>
      <wsdl:output message="tns:deleteDomainWithPSNsResponse" name="deleteDomainWithPSNsResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
      <wsdl:fault message="tns:DomainInUseException" name="DomainInUseException">
      </wsdl:fault>
      <wsdl:fault message="tns:UnknownDomainException" name="UnknownDomainException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDomainsForPrefix">
      <wsdl:input message="tns:getDomainsForPrefix" name="getDomainsForPrefix">
      </wsdl:input>
      <wsdl:output message="tns:getDomainsForPrefixResponse" name="getDomainsForPrefixResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listPSNsPaginated">
      <wsdl:input message="tns:listPSNsPaginated" name="listPSNsPaginated">
      </wsdl:input>
      <wsdl:output message="tns:listPSNsPaginatedResponse" name="listPSNsPaginatedResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
      <wsdl:fault message="tns:UnknownDomainException" name="UnknownDomainException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="arePSNDeletable">
      <wsdl:input message="tns:arePSNDeletable" name="arePSNDeletable">
      </wsdl:input>
      <wsdl:output message="tns:arePSNDeletableResponse" name="arePSNDeletableResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
      <wsdl:fault message="tns:UnknownDomainException" name="UnknownDomainException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDomain">
      <wsdl:input message="tns:addDomain" name="addDomain">
      </wsdl:input>
      <wsdl:output message="tns:addDomainResponse" name="addDomainResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
      <wsdl:fault message="tns:DomainInUseException" name="DomainInUseException">
      </wsdl:fault>
      <wsdl:fault message="tns:InvalidGeneratorException" name="InvalidGeneratorException">
      </wsdl:fault>
      <wsdl:fault message="tns:InvalidAlphabetException" name="InvalidAlphabetException">
      </wsdl:fault>
      <wsdl:fault message="tns:UnknownDomainException" name="UnknownDomainException">
      </wsdl:fault>
      <wsdl:fault message="tns:InvalidParentDomainException" name="InvalidParentDomainException">
      </wsdl:fault>
      <wsdl:fault message="tns:InvalidCheckDigitClassException" name="InvalidCheckDigitClassException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRestrictionForCheckDigitClass">
      <wsdl:input message="tns:getRestrictionForCheckDigitClass" name="getRestrictionForCheckDigitClass">
      </wsdl:input>
      <wsdl:output message="tns:getRestrictionForCheckDigitClassResponse" name="getRestrictionForCheckDigitClassResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
      <wsdl:fault message="tns:InvalidCheckDigitClassException" name="InvalidCheckDigitClassException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDomainsForSuffix">
      <wsdl:input message="tns:getDomainsForSuffix" name="getDomainsForSuffix">
      </wsdl:input>
      <wsdl:output message="tns:getDomainsForSuffixResponse" name="getDomainsForSuffixResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listPSNs">
      <wsdl:input message="tns:listPSNs" name="listPSNs">
      </wsdl:input>
      <wsdl:output message="tns:listPSNsResponse" name="listPSNsResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
      <wsdl:fault message="tns:UnknownDomainException" name="UnknownDomainException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDomain">
      <wsdl:input message="tns:getDomain" name="getDomain">
      </wsdl:input>
      <wsdl:output message="tns:getDomainResponse" name="getDomainResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
      <wsdl:fault message="tns:UnknownDomainException" name="UnknownDomainException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="countPSNsForDomains">
      <wsdl:input message="tns:countPSNsForDomains" name="countPSNsForDomains">
      </wsdl:input>
      <wsdl:output message="tns:countPSNsForDomainsResponse" name="countPSNsForDomainsResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
      <wsdl:fault message="tns:UnknownDomainException" name="UnknownDomainException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listDomains">
      <wsdl:input message="tns:listDomains" name="listDomains">
      </wsdl:input>
      <wsdl:output message="tns:listDomainsResponse" name="listDomainsResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteDomain">
      <wsdl:input message="tns:deleteDomain" name="deleteDomain">
      </wsdl:input>
      <wsdl:output message="tns:deleteDomainResponse" name="deleteDomainResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
      <wsdl:fault message="tns:DomainInUseException" name="DomainInUseException">
      </wsdl:fault>
      <wsdl:fault message="tns:UnknownDomainException" name="UnknownDomainException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateDomain">
      <wsdl:input message="tns:updateDomain" name="updateDomain">
      </wsdl:input>
      <wsdl:output message="tns:updateDomainResponse" name="updateDomainResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
      <wsdl:fault message="tns:DomainInUseException" name="DomainInUseException">
      </wsdl:fault>
      <wsdl:fault message="tns:InvalidGeneratorException" name="InvalidGeneratorException">
      </wsdl:fault>
      <wsdl:fault message="tns:InvalidAlphabetException" name="InvalidAlphabetException">
      </wsdl:fault>
      <wsdl:fault message="tns:UnknownDomainException" name="UnknownDomainException">
      </wsdl:fault>
      <wsdl:fault message="tns:InvalidParentDomainException" name="InvalidParentDomainException">
      </wsdl:fault>
      <wsdl:fault message="tns:InvalidCheckDigitClassException" name="InvalidCheckDigitClassException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="countPSNs">
      <wsdl:input message="tns:countPSNs" name="countPSNs">
      </wsdl:input>
      <wsdl:output message="tns:countPSNsResponse" name="countPSNsResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
      <wsdl:fault message="tns:UnknownDomainException" name="UnknownDomainException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listPSNsForDomainsPaginated">
      <wsdl:input message="tns:listPSNsForDomainsPaginated" name="listPSNsForDomainsPaginated">
      </wsdl:input>
      <wsdl:output message="tns:listPSNsForDomainsPaginatedResponse" name="listPSNsForDomainsPaginatedResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
      <wsdl:fault message="tns:UnknownDomainException" name="UnknownDomainException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateDomainInUse">
      <wsdl:input message="tns:updateDomainInUse" name="updateDomainInUse">
      </wsdl:input>
      <wsdl:output message="tns:updateDomainInUseResponse" name="updateDomainInUseResponse">
      </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
      </wsdl:fault>
      <wsdl:fault message="tns:InvalidGeneratorException" name="InvalidGeneratorException">
      </wsdl:fault>
      <wsdl:fault message="tns:UnknownDomainException" name="UnknownDomainException">
      </wsdl:fault>
      <wsdl:fault message="tns:InvalidAlphabetException" name="InvalidAlphabetException">
      </wsdl:fault>
      <wsdl:fault message="tns:InvalidParentDomainException" name="InvalidParentDomainException">
      </wsdl:fault>
      <wsdl:fault message="tns:InvalidCheckDigitClassException" name="InvalidCheckDigitClassException">
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="DomainManagerBeanServiceSoapBinding" type="tns:DomainManager">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="deleteDomainWithPSNs">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteDomainWithPSNs">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteDomainWithPSNsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DomainInUseException">
        <soap:fault name="DomainInUseException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnknownDomainException">
        <soap:fault name="UnknownDomainException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDomainsForPrefix">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDomainsForPrefix">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDomainsForPrefixResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listPSNsPaginated">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listPSNsPaginated">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listPSNsPaginatedResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnknownDomainException">
        <soap:fault name="UnknownDomainException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="arePSNDeletable">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="arePSNDeletable">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="arePSNDeletableResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnknownDomainException">
        <soap:fault name="UnknownDomainException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRestrictionForCheckDigitClass">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRestrictionForCheckDigitClass">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRestrictionForCheckDigitClassResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidCheckDigitClassException">
        <soap:fault name="InvalidCheckDigitClassException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDomain">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addDomain">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addDomainResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DomainInUseException">
        <soap:fault name="DomainInUseException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidGeneratorException">
        <soap:fault name="InvalidGeneratorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAlphabetException">
        <soap:fault name="InvalidAlphabetException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnknownDomainException">
        <soap:fault name="UnknownDomainException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidParentDomainException">
        <soap:fault name="InvalidParentDomainException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidCheckDigitClassException">
        <soap:fault name="InvalidCheckDigitClassException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDomainsForSuffix">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDomainsForSuffix">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDomainsForSuffixResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listPSNs">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listPSNs">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listPSNsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnknownDomainException">
        <soap:fault name="UnknownDomainException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDomain">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDomain">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDomainResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnknownDomainException">
        <soap:fault name="UnknownDomainException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="countPSNsForDomains">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="countPSNsForDomains">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="countPSNsForDomainsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnknownDomainException">
        <soap:fault name="UnknownDomainException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listDomains">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listDomains">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listDomainsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteDomain">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteDomain">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteDomainResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DomainInUseException">
        <soap:fault name="DomainInUseException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnknownDomainException">
        <soap:fault name="UnknownDomainException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateDomain">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateDomain">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateDomainResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DomainInUseException">
        <soap:fault name="DomainInUseException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidGeneratorException">
        <soap:fault name="InvalidGeneratorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAlphabetException">
        <soap:fault name="InvalidAlphabetException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnknownDomainException">
        <soap:fault name="UnknownDomainException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidParentDomainException">
        <soap:fault name="InvalidParentDomainException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidCheckDigitClassException">
        <soap:fault name="InvalidCheckDigitClassException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="countPSNs">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="countPSNs">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="countPSNsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnknownDomainException">
        <soap:fault name="UnknownDomainException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listPSNsForDomainsPaginated">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listPSNsForDomainsPaginated">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listPSNsForDomainsPaginatedResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnknownDomainException">
        <soap:fault name="UnknownDomainException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateDomainInUse">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateDomainInUse">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateDomainInUseResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidGeneratorException">
        <soap:fault name="InvalidGeneratorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnknownDomainException">
        <soap:fault name="UnknownDomainException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAlphabetException">
        <soap:fault name="InvalidAlphabetException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidParentDomainException">
        <soap:fault name="InvalidParentDomainException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidCheckDigitClassException">
        <soap:fault name="InvalidCheckDigitClassException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DomainManagerBeanService">
    <wsdl:port binding="tns:DomainManagerBeanServiceSoapBinding" name="DomainServicePort">
      <soap:address location="http://localhost:8081/gpas/DomainService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
