include:
  - docker-compose-include-fhir-servers.yml

services:

#  dp-gics-mysql:
#    image: mysql:8.0.27
#    container_name: dp-gics-mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#    volumes:
#      - ./gics/sqls:/docker-entrypoint-initdb.d
#    #      - ./gics/data/mysql:/var/lib/mysql # Enable for persistence
#    ports:
#      - "3306:3306"
#  dp-gics:
#    image: registry.gitlab.ume.de/ship-trust-unit/gics:6e1deb18
#    container_name: dp-gics-wildfly
#    ports:
#      - "8080:8080"
#    #      - "9990:9990"
#    depends_on:
#      - dp-gics-mysql
#    environment:
#      TTP_GICS_DB_HOST: dp-gics-mysql
#    entrypoint: /bin/bash
#    command: -c "./wait-for-it.sh dp-gics-mysql:3306 -t 120 && ./run.sh"
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8080/gics/gicsService?wsdl" ]
#      interval: 5s
#      timeout: 5s
#      retries: 100
#      start_period: 60s

  dp-gpas-mysql:
    image: ghcr.io/umessen/mysql-with-gpas:0.0.1 # mysql:8 with prefilled gpas database
    container_name: dp-gpas-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
  dp-gpas:
    image: ghcr.io/umessen/gpas:2023.1.1 # normal gPAS packed in a docker image
    container_name: dp-gpas-wildfly
    ports:
      - "8081:8080"
    #      - "9990:9990"
    depends_on:
      - dp-gpas-mysql
    environment:
      TTP_GPAS_DB_HOST: dp-gpas-mysql
    entrypoint: /bin/bash
    command: -c "./wait-for-it.sh dp-gpas-mysql:3306 -t 120 && ./run.sh"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/gpas/gpasService?wsdl" ]
      interval: 5s
      timeout: 5s
      retries: 100
      start_period: 60s

  dp-deidentifhir-pipeline:
    image: eclipse-temurin:24_36-jre
    container_name: dp-deidentifhir-pipeline
    volumes:
      - ../target/deidentifhir-pipeline-0.1.4-runnable.jar:/deidentifhir-pipeline.jar
      - ./application-with-gpas.yaml:/conf/application.yaml
      - ../deidentifhir:/deidentifhir
    entrypoint: /bin/bash
    command: -c "java -jar /deidentifhir-pipeline.jar --spring.config.location=/conf/application.yaml"
    network_mode: "host"
    depends_on:
      dp-gpas:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8042/healthcheck" ]
      interval: 5s
      timeout: 5s
      retries: 100
      start_period: 5s
